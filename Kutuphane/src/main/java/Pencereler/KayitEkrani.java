/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Pencereler;

import Sınıflar.Kullanici;
import Sınıflar.Kullanicilar;
import Sınıflar.Regex;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author emir
 */
public class KayitEkrani extends javax.swing.JFrame {

    /**
     * Creates new form KayitEkrani
     */
    Regex regex = new Regex();
    Kullanicilar kullaniciListesi;
    GirisEkrani giris;

    /*"KayitEkrani" sınıfının kurucu metodunda, başlangıç bileşenlerinin (UI bileşenleri) oluşturulması ve ayarlanması gerçekleştirilir. 
    Ayrıca "Kullanicilar" sınıfından bir nesne ve "GirisEkrani" sınıfından bir nesne oluşturulur. 
    Bu nesneler, kayıt işlemleri ve giriş ekranıyla ilgili işlemleri yapmak için kullanılacak.*/
    public KayitEkrani() {
        /*Bu kod satırları, "KayitEkrani" sınıfının başlangıç durumunu ve UI bileşenlerinin ayarlarını gerçekleştirir
        . Ayrıca, "Kullanicilar" ve "GirisEkrani" sınıflarından nesneler oluşturarak kayıt işlemleri ve giriş ekranıyla ilgili işlemleri gerçekleştirmek için bu nesneleri kullanır.*/
        initComponents();
        kullaniciListesi = new Kullanicilar();
        giris = new GirisEkrani();
        ImageIcon image = new ImageIcon(getClass().getResource("logo.png"));
        lbl_logo.setIcon(image);
        ImageIcon image2 = new ImageIcon(getClass().getResource("icon60.png"));
        lbl_icon.setIcon(image2);
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnl_kayitEkrani = new javax.swing.JPanel();
        btn_kayit = new javax.swing.JButton();
        txt_kullaniciAdi = new javax.swing.JTextField();
        lbl_sifre = new javax.swing.JLabel();
        txt_sifre = new javax.swing.JPasswordField();
        chck_politika = new javax.swing.JCheckBox();
        lbl_politika1 = new javax.swing.JLabel();
        lbl_politika2 = new javax.swing.JLabel();
        txt_sifreTekrar = new javax.swing.JPasswordField();
        lbl_kullaniciAdi = new javax.swing.JLabel();
        jscrollpane_adres = new javax.swing.JScrollPane();
        txtArea_adres = new javax.swing.JTextArea();
        lbl_sifreTekrar = new javax.swing.JLabel();
        lbl_adres = new javax.swing.JLabel();
        lbl_kutuphanesi = new javax.swing.JLabel();
        lbl_dostlar = new javax.swing.JLabel();
        lbl_logo = new javax.swing.JLabel();
        lbl_icon = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnl_kayitEkrani.setBackground(new java.awt.Color(255, 255, 255));
        pnl_kayitEkrani.setMaximumSize(new java.awt.Dimension(404, 512));
        pnl_kayitEkrani.setMinimumSize(new java.awt.Dimension(404, 512));
        pnl_kayitEkrani.setPreferredSize(new java.awt.Dimension(404, 512));
        pnl_kayitEkrani.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_kayit.setBackground(new java.awt.Color(51, 102, 255));
        btn_kayit.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_kayit.setForeground(new java.awt.Color(255, 255, 255));
        btn_kayit.setText("Kayıt Ol");
        btn_kayit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_kayitActionPerformed(evt);
            }
        });
        pnl_kayitEkrani.add(btn_kayit, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 460, 260, -1));
        pnl_kayitEkrani.add(txt_kullaniciAdi, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 150, 260, -1));

        lbl_sifre.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lbl_sifre.setForeground(new java.awt.Color(51, 102, 255));
        lbl_sifre.setText("Şifre");
        pnl_kayitEkrani.add(lbl_sifre, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 170, 140, 40));
        pnl_kayitEkrani.add(txt_sifre, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 200, 260, -1));
        pnl_kayitEkrani.add(chck_politika, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 410, -1, -1));

        lbl_politika1.setForeground(new java.awt.Color(51, 102, 255));
        lbl_politika1.setText("Kullanıcı sözleşmesini ve kişisel verilerimin");
        pnl_kayitEkrani.add(lbl_politika1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 410, 290, -1));

        lbl_politika2.setForeground(new java.awt.Color(51, 102, 255));
        lbl_politika2.setText("korunması politikasını kabul ediyorum.");
        pnl_kayitEkrani.add(lbl_politika2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 430, -1, -1));
        pnl_kayitEkrani.add(txt_sifreTekrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 250, 260, -1));

        lbl_kullaniciAdi.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lbl_kullaniciAdi.setForeground(new java.awt.Color(51, 102, 255));
        lbl_kullaniciAdi.setText("Kullanıcı Adı");
        pnl_kayitEkrani.add(lbl_kullaniciAdi, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 130, 140, 20));

        txtArea_adres.setColumns(20);
        txtArea_adres.setLineWrap(true);
        txtArea_adres.setRows(5);
        jscrollpane_adres.setViewportView(txtArea_adres);

        pnl_kayitEkrani.add(jscrollpane_adres, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 300, 260, 100));

        lbl_sifreTekrar.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lbl_sifreTekrar.setForeground(new java.awt.Color(51, 102, 255));
        lbl_sifreTekrar.setText("Şifre Tekrar");
        pnl_kayitEkrani.add(lbl_sifreTekrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, 140, 30));

        lbl_adres.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lbl_adres.setForeground(new java.awt.Color(51, 102, 255));
        lbl_adres.setText("Email Adresi");
        pnl_kayitEkrani.add(lbl_adres, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 280, 140, 20));

        lbl_kutuphanesi.setFont(new java.awt.Font("Bodoni MT", 0, 20)); // NOI18N
        lbl_kutuphanesi.setForeground(new java.awt.Color(51, 102, 255));
        lbl_kutuphanesi.setText("KÜTÜPHANESI|");
        pnl_kayitEkrani.add(lbl_kutuphanesi, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 80, 170, -1));

        lbl_dostlar.setFont(new java.awt.Font("Bodoni MT", 0, 16)); // NOI18N
        lbl_dostlar.setForeground(new java.awt.Color(51, 102, 255));
        lbl_dostlar.setText("| DOSTLAR");
        pnl_kayitEkrani.add(lbl_dostlar, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 50, 90, 30));
        pnl_kayitEkrani.add(lbl_logo, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, 70, 60));
        pnl_kayitEkrani.add(lbl_icon, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 40, 70, 70));

        getContentPane().add(pnl_kayitEkrani, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 520));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_kayitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_kayitActionPerformed

        /*Kullanıcı tarafından giriş alanlarından kullanıcı adı, şifre, şifre tekrarı ve e-posta alınır.*/
        String kullaniciAdi = txt_kullaniciAdi.getText();
        String sifre = txt_sifre.getText();
        String sifreTekrar = txt_sifreTekrar.getText();
        String email = txtArea_adres.getText();
        /*Kullanıcının "Kişisel Verilerin Korunması Politikası"nı kabul etmesi gereken bir onay kutusu (checkbox) kontrol edilir.*/
        boolean checkbox = chck_politika.isSelected();

        /*Ardından, girilen bilgilerin doğruluğunu kontrol etmek için bir dizi koşul ifadesi kullanılır. Bu koşullar aşağıdaki durumları kontrol eder:
        Kullanıcı adının boş olup olmadığı kontrol edilir.
        Şifrenin boş olup olmadığı kontrol edilir.
        Şifre tekrarının boş olup olmadığı kontrol edilir.
        Girilen şifrelerin eşleşip eşleşmediği kontrol edilir.
        E-posta adresinin boş olup olmadığı kontrol edilir.
        Kullanıcının "Kişisel Verilerin Korunması Politikası"nı kabul ettiği kontrol edilir.*/
        if (kullaniciAdi.compareTo("") == 0) {
            JOptionPane.showMessageDialog(rootPane, "Kullanıcı adı boş bırakılamaz!", "Uyarı", JOptionPane.WARNING_MESSAGE);
        } else if (sifre.compareTo("") == 0) {
            JOptionPane.showMessageDialog(rootPane, "Şirenizi girmelisiniz!", "Uyarı", JOptionPane.WARNING_MESSAGE);

        } else if (sifreTekrar.compareTo("") == 0) {
            JOptionPane.showMessageDialog(rootPane, "Şirenizi tekrar girmelisiniz!", "Uyarı", JOptionPane.WARNING_MESSAGE);

        } else if (!sifre.equals(sifreTekrar)) {
            JOptionPane.showMessageDialog(rootPane, "Girdiğiniz şifreler aynı olmalı!", "Uyarı", JOptionPane.WARNING_MESSAGE);

        } else if (email.compareTo("") == 0) {
            JOptionPane.showMessageDialog(rootPane, "Email adres alanı boş bırakılamaz!", "Uyarı", JOptionPane.WARNING_MESSAGE);

        } else if (checkbox == false) {
            JOptionPane.showMessageDialog(rootPane, "Kullanıcı Sözleşmesini ve Kişisel Verilerin Korunması Politikasını kabul etmeden kayıt olamazsınız!",
                    "Uyarı", JOptionPane.WARNING_MESSAGE);
        } /*Kullanıcı adı ve şifre için belirlenen kurallara uyulup uyulmadığı kontrol edilir. Eğer kurallara uymayan bir kullanıcı adı veya şifre girildiyse uyarı mesajları gösterilir.
        */else if (regex.regexForUsername(kullaniciAdi) == false) {
            JOptionPane.showMessageDialog(rootPane, "Kullanıcı adı geçerli değil! Lütfen kullanıcı adı kurallarına dikkat edin! ;\n"
                    + "En az 7 karakter ve harf, sayı ve '_' '/' karakterleri içerebilir. Ayrıca harflerle başlamalıdır.\n"
                    + "Örnek bir geçerli kullanıcı adı: utkubaran.124",
                    "Uyarı", JOptionPane.WARNING_MESSAGE);
        } else if (regex.regexForPassword(sifre) == false) {
            JOptionPane.showMessageDialog(rootPane, "Şifre  geçerli değil! Lütfen şifre kurallarına dikkat edin! ;\n"
                    + "En az 7 karakter ve harf, sayı ve '_' '/' karakterleri içerebilir.\n"
                    + "Örnek bir geçerli şifre: 2002Utku.",
                    "Uyarı", JOptionPane.WARNING_MESSAGE);
        } else {

            /*Yukarıdaki koşulların tümü sağlandığında, yeni bir "Kullanici" nesnesi oluşturulur ve "Kullanicilar" sınıfında bulunan "kullaniciEkle" metodu kullanılarak kullanıcı kaydedilir.*/
            Kullanici yeniKullanici = new Kullanici(kullaniciAdi, sifre, email);
            boolean result = kullaniciListesi.kullaniciAdiAlinmismi(yeniKullanici.getKullaniciAdi());
            if (!result) {
                giris.kullaniciEkle(yeniKullanici);

                int options = JOptionPane.showConfirmDialog(rootPane, "Başarılı bir şekilde kayıt oldunuz, isterseniz giriş ekranına"
                        + " yönlendirileceksiniz.", "Kayıt Olundu", JOptionPane.YES_NO_OPTION);
                /*Kullanıcının başarıyla kaydedildiğine dair bir mesaj gösterilir ve kullanıcıya giriş ekranına yönlendirilip yönlendirilmeyeceği sorulur. 
                Kullanıcıya "Evet" seçeneği seçilirse giriş ekranına yönlendirilir, aksi halde pencere kapatılır.*/
                if (options == JOptionPane.YES_OPTION) {
                    this.dispose();
                    giris.show();
                } else {
                    this.dispose();
                }
            } else {

                JOptionPane.showMessageDialog(rootPane, "Bu kullanıcı adı zaten var.", "Uyarı", JOptionPane.WARNING_MESSAGE);

            }

        }
    }//GEN-LAST:event_btn_kayitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KayitEkrani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KayitEkrani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KayitEkrani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KayitEkrani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KayitEkrani().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_kayit;
    private javax.swing.JCheckBox chck_politika;
    private javax.swing.JScrollPane jscrollpane_adres;
    private javax.swing.JLabel lbl_adres;
    private javax.swing.JLabel lbl_dostlar;
    private javax.swing.JLabel lbl_icon;
    private javax.swing.JLabel lbl_kullaniciAdi;
    private javax.swing.JLabel lbl_kutuphanesi;
    private javax.swing.JLabel lbl_logo;
    private javax.swing.JLabel lbl_politika1;
    private javax.swing.JLabel lbl_politika2;
    private javax.swing.JLabel lbl_sifre;
    private javax.swing.JLabel lbl_sifreTekrar;
    private javax.swing.JPanel pnl_kayitEkrani;
    private javax.swing.JTextArea txtArea_adres;
    private javax.swing.JTextField txt_kullaniciAdi;
    private javax.swing.JPasswordField txt_sifre;
    private javax.swing.JPasswordField txt_sifreTekrar;
    // End of variables declaration//GEN-END:variables
}
